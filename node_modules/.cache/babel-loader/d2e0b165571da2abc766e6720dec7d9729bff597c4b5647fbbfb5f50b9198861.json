{"ast":null,"code":"var _jsxFileName = \"D:\\\\University\\\\8. 9-Courses\\\\9. Cloud Computing\\\\Assignment\\\\Final Project\\\\Final-project-cloud-backend\\\\Final-project-cloud-frontend\\\\src\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const {\n    email\n  } = useParams(); // Get email from URL\n  const [profile, setProfile] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadSuccess, setUploadSuccess] = useState(false); // New state to track upload success\n\n  // Fetch the profile on component load\n  useEffect(() => {\n    const fetchProfile = async () => {\n      try {\n        const response = await axios.get(`https://9q7h11pvif.execute-api.us-east-1.amazonaws.com/dev/getImage?email=${email}`);\n        setProfile(response.data);\n      } catch (error) {\n        console.error(\"Error fetching profile:\", error);\n      }\n    };\n    fetchProfile();\n  }, [email]);\n\n  // Handle file selection\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n    setUploadSuccess(false); // Reset success message when a new file is selected\n  };\n\n  // Handle image upload\n  const handleImageUpload = async () => {\n    if (!selectedFile) {\n      alert(\"Please select a file to upload\");\n      return;\n    }\n    try {\n      // Request a pre-signed URL to upload the file\n      const response = await axios.post(\"https://9q7h11pvif.execute-api.us-east-1.amazonaws.com/dev/uploadImage\", {\n        filename: selectedFile.name,\n        contentType: selectedFile.type,\n        email // Use email from URL params\n      });\n      const {\n        uploadURL,\n        imageUrl\n      } = response.data;\n\n      // Upload the file to S3 using the pre-signed URL\n      await axios.put(uploadURL, selectedFile, {\n        headers: {\n          \"Content-Type\": selectedFile.type\n        }\n      });\n\n      // Update the profile with the new image URL\n      setProfile({\n        ...profile,\n        profileImage: imageUrl\n      });\n\n      // Show success message\n      setUploadSuccess(true);\n    } catch (error) {\n      console.error(\"Error uploading image:\", error);\n      alert(\"Error uploading image. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: profile ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", profile.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), profile.profileImage ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: profile.profileImage // Use the real profile image URL\n        ,\n        alt: \"Profile\",\n        width: 100,\n        height: 100,\n        onError: e => {\n          e.target.src = \"\"; // Provide fallback image or leave blank if there's no fallback\n          console.error(\"Failed to load image:\", profile.profileImage); // Log error\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No profile image uploaded.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleImageUpload,\n        children: \"Upload Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), uploadSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload profile successful!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }, this), \" \"]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading profiles....123.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"itEUz3lCGra+IQU4SMnTQOZ8iNA=\", false, function () {\n  return [useParams];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s","email","profile","setProfile","selectedFile","setSelectedFile","uploadSuccess","setUploadSuccess","fetchProfile","response","get","data","error","console","handleFileChange","e","target","files","handleImageUpload","alert","post","filename","name","contentType","type","uploadURL","imageUrl","put","headers","profileImage","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","width","height","onError","onChange","onClick","_c","$RefreshReg$"],"sources":["D:/University/8. 9-Courses/9. Cloud Computing/Assignment/Final Project/Final-project-cloud-backend/Final-project-cloud-frontend/src/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst Profile = () => {\r\n  const { email } = useParams(); // Get email from URL\r\n  const [profile, setProfile] = useState(null);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [uploadSuccess, setUploadSuccess] = useState(false); // New state to track upload success\r\n\r\n  // Fetch the profile on component load\r\n  useEffect(() => {\r\n    const fetchProfile = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `https://9q7h11pvif.execute-api.us-east-1.amazonaws.com/dev/getImage?email=${email}`\r\n        );\r\n        setProfile(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching profile:\", error);\r\n      }\r\n    };\r\n    fetchProfile();\r\n  }, [email]);\r\n\r\n  // Handle file selection\r\n  const handleFileChange = (e) => {\r\n    setSelectedFile(e.target.files[0]);\r\n    setUploadSuccess(false); // Reset success message when a new file is selected\r\n  };\r\n\r\n  // Handle image upload\r\n  const handleImageUpload = async () => {\r\n    if (!selectedFile) {\r\n      alert(\"Please select a file to upload\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Request a pre-signed URL to upload the file\r\n      const response = await axios.post(\r\n        \"https://9q7h11pvif.execute-api.us-east-1.amazonaws.com/dev/uploadImage\",\r\n        {\r\n          filename: selectedFile.name,\r\n          contentType: selectedFile.type,\r\n          email, // Use email from URL params\r\n        }\r\n      );\r\n\r\n      const { uploadURL, imageUrl } = response.data;\r\n\r\n      // Upload the file to S3 using the pre-signed URL\r\n      await axios.put(uploadURL, selectedFile, {\r\n        headers: { \"Content-Type\": selectedFile.type },\r\n      });\r\n\r\n      // Update the profile with the new image URL\r\n      setProfile({ ...profile, profileImage: imageUrl });\r\n\r\n      // Show success message\r\n      setUploadSuccess(true);\r\n    } catch (error) {\r\n      console.error(\"Error uploading image:\", error);\r\n      alert(\"Error uploading image. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {profile ? (\r\n        <>\r\n          <h2>Welcome, {profile.name}</h2>\r\n          {profile.profileImage ? (\r\n            <img\r\n              src={profile.profileImage} // Use the real profile image URL\r\n              alt=\"Profile\"\r\n              width={100}\r\n              height={100}\r\n              onError={(e) => {\r\n                e.target.src = \"\"; // Provide fallback image or leave blank if there's no fallback\r\n                console.error(\"Failed to load image:\", profile.profileImage); // Log error\r\n              }}\r\n            />\r\n          ) : (\r\n            <p>No profile image uploaded.</p>\r\n          )}\r\n          <input type=\"file\" onChange={handleFileChange} />\r\n          <button onClick={handleImageUpload}>Upload Image</button>\r\n          {uploadSuccess && <p>Upload profile successful!</p>}{\" \"}\r\n          {/* Show success message */}\r\n        </>\r\n      ) : (\r\n        <p>Loading profiles....123.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}