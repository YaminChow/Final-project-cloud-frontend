{"ast":null,"code":"var _jsxFileName = \"D:\\\\University\\\\8. 9-Courses\\\\9. Cloud Computing\\\\Assignment\\\\Final Project\\\\Final-project-cloud-backend\\\\Final-project-cloud-frontend\\\\src\\\\SignUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\"; // Import axios for making HTTP requests\nimport \"./style.css\"; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = ({\n  setCurrentUser\n}) => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [image, setProfileImage] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate(); // React Router's navigate to redirect after signup\n\n  const handleSignUp = async e => {\n    e.preventDefault();\n    try {\n      // Prepare form data for the API request\n      const filename = encodeURIComponent(image.name); // Assuming profileImage is the selected file\n      const contentType = image.type;\n\n      // Send POST request to API Gateway to get a pre-signed URL\n      const response = await axios.post(\"https://9q7h11pvif.execute-api.us-east-1.amazonaws.com/dev/signup\",\n      // Replace with your API Gateway URL\n      {\n        email,\n        password,\n        name,\n        image\n      });\n\n      // Extract the pre-signed URL from the response\n      const {\n        uploadURL\n      } = response.data;\n      console.log(\"Pre-signed URL:\", uploadURL, response.data);\n\n      // Upload the file to S3 using the pre-signed URL\n      await axios.put(uploadURL, image, {\n        headers: {\n          \"Content-Type\": image.type\n        } // Set the correct content type for the file\n      });\n      setMessage(\"Upload successful!\");\n      navigate(\"/login\");\n    } catch (error) {\n      console.error(\"Error during signup:\", error);\n      alert(\"Signup failed. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSignUp,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        placeholder: \"Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setProfileImage(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUp, \"eIfrNDZOA3G67wxoE7e3hYeKC4A=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","SignUp","setCurrentUser","_s","email","setEmail","password","setPassword","name","setName","image","setProfileImage","message","setMessage","navigate","handleSignUp","e","preventDefault","filename","encodeURIComponent","contentType","type","response","post","uploadURL","data","console","log","put","headers","error","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","required","files","_c","$RefreshReg$"],"sources":["D:/University/8. 9-Courses/9. Cloud Computing/Assignment/Final Project/Final-project-cloud-backend/Final-project-cloud-frontend/src/SignUp.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\"; // Import axios for making HTTP requests\r\nimport \"./style.css\"; // Import the CSS file\r\n\r\nconst SignUp = ({ setCurrentUser }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [image, setProfileImage] = useState(null);\r\n  const [message, setMessage] = useState(\"\");\r\n  const navigate = useNavigate(); // React Router's navigate to redirect after signup\r\n\r\n  const handleSignUp = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // Prepare form data for the API request\r\n      const filename = encodeURIComponent(image.name); // Assuming profileImage is the selected file\r\n      const contentType = image.type;\r\n\r\n      // Send POST request to API Gateway to get a pre-signed URL\r\n      const response = await axios.post(\r\n        \"https://9q7h11pvif.execute-api.us-east-1.amazonaws.com/dev/signup\", // Replace with your API Gateway URL\r\n        {\r\n          email,\r\n          password,\r\n          name,\r\n          image,\r\n        }\r\n      );\r\n\r\n      // Extract the pre-signed URL from the response\r\n      const { uploadURL } = response.data;\r\n      console.log(\"Pre-signed URL:\", uploadURL, response.data);\r\n\r\n      // Upload the file to S3 using the pre-signed URL\r\n      await axios.put(uploadURL, image, {\r\n        headers: { \"Content-Type\": image.type }, // Set the correct content type for the file\r\n      });\r\n\r\n      setMessage(\"Upload successful!\");\r\n\r\n      navigate(\"/login\");\r\n    } catch (error) {\r\n      console.error(\"Error during signup:\", error);\r\n      alert(\"Signup failed. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>Sign Up</h2>\r\n      <form onSubmit={handleSignUp}>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Email\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"Password\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          placeholder=\"Name\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"file\"\r\n          onChange={(e) => setProfileImage(e.target.files[0])}\r\n        />\r\n        <button type=\"submit\">Sign Up</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}